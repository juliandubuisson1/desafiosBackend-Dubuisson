openapi: 3.0.0
info:
  title: API de Carrito de Compras
  description: API para gestionar el carrito de compras y realizar compras en una tienda en l√≠nea
  version: 1.0.0

paths:
  '/api/cart/{cid}':
    get:
      summary: Obtener detalles del carrito por ID
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: ID del carrito a consultar
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Retorna detalles del carrito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '500':
          description: Error en la base de datos

    put:
      summary: Actualizar el carrito por ID
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: ID del carrito a actualizar
        - in: body
          name: cart
          required: true
          description: Datos del carrito a actualizar
          schema:
            type: object
            properties:
              products:
                type: array
                items:
                  $ref: '#/components/schemas/CartProduct'
              total:
                type: number
          example:
            products:
              - productId: "product1"
                productQuantity: 2
                productTotal: 50
            total: 100
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Carrito actualizado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '500':
          description: Error en la base de datos

  '/api/cart/{cid}/products/{pid}':
    put:
      summary: Actualizar la cantidad de un producto en el carrito
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: ID del carrito
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: ID del producto en el carrito
        - in: body
          name: quantity
          required: true
          description: Nueva cantidad del producto
          schema:
            type: object
            properties:
              quantity:
                type: integer
                minimum: 1
          example:
            quantity: 3
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Cantidad del producto actualizada correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '500':
          description: Error en la base de datos

    delete:
      summary: Eliminar un producto del carrito
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: ID del carrito
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: ID del producto en el carrito
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Producto eliminado del carrito correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '500':
          description: Error en la base de datos

  '/api/cart/{cid}/purchase':
    post:
      summary: Realizar la compra del carrito
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: ID del carrito
        - in: body
          name: purchaseData
          required: true
          description: Datos para la compra
          schema:
            type: object
            properties:
              country:
                type: string
              state:
                type: string
              city:
                type: string
              street:
                type: string
              postal_code:
                type: string
              phone:
                type: string
              card_bank:
                type: string
              security_number:
                type: string
              userId:
                type: string
          example:
            country: "US"
            state: "California"
            city: "Los Angeles"
            street: "123 Main St"
            postal_code: "90001"
            phone: "+1-123-456-7890"
            card_bank: "Visa"
            security_number: "123"
            userId: "user123"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Compra realizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '500':
          description: Error al realizar la compra

components:
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: string
        userId:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/CartProduct'
        totalProducts:
          type: integer
        totalPrice:
          type: number
      required:
        - userId
        - products

    CartProduct:
      type: object
      properties:
        productId:
          type: string
        productQuantity:
          type: integer
        productTotal:
          type: number

    Ticket:
      type: object
      properties:
        code:
          type: string
        purchaseDatetime:
          type: string
          format: date-time
        amount:
          type: number
        purchaser:
          type: string
        products:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              product:
                type: string
              productQuantity:
                type: integer
              productTotal:
                type: number
      required:
        - code
        - purchaseDatetime
        - amount
        - purchaser
        - products
